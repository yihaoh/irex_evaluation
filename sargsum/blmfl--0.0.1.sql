\echo Use "CREATE EXTENSION bloomfilter (blmfl)" to load this file. \quit

CREATE TYPE BLMFL_RESULT AS (filt BYTEA, m INT, n INT, k INT, t INT); 

CREATE OR REPLACE FUNCTION blmfl_test(BLMFL_RESULT, input_data VARIADIC BYTEA[]) RETURNS BOOLEAN
AS 'MODULE_PATHNAME'
LANGUAGE C IMMUTABLE STRICT;

CREATE OR REPLACE FUNCTION blmfl_sfunc(INTERNAL, input_data VARIADIC BYTEA[]) RETURNS INTERNAL
AS 'MODULE_PATHNAME'
LANGUAGE C;

CREATE OR REPLACE FUNCTION blmfl_ffunc(INTERNAL) RETURNS BLMFL_RESULT
AS 'MODULE_PATHNAME'
LANGUAGE C;

CREATE OR REPLACE AGGREGATE blmfl(input_data VARIADIC BYTEA[]) (
    SFUNC = blmfl_sfunc,
    STYPE = INTERNAL,
    FINALFUNC = blmfl_ffunc
);

-- INT ONLY BLMFL FUNCTION
CREATE OR REPLACE FUNCTION blmfl_test_int(BLMFL_RESULT, input_data BIGINT) RETURNS BOOLEAN
AS 'MODULE_PATHNAME'
LANGUAGE C IMMUTABLE STRICT;

-- INT ONLY BLMFL FUNCTION
CREATE OR REPLACE FUNCTION blmfl_sfunc_int(INTERNAL, input_data BIGINT) RETURNS INTERNAL
AS 'MODULE_PATHNAME'
LANGUAGE C;

-- INT ONLY BLMFL FUNCTION
-- CREATE OR REPLACE FUNCTION blmfl_ffunc_int(INTERNAL) RETURNS BLMFL_RESULT
-- AS 'MODULE_PATHNAME'
-- LANGUAGE C;

-- INT ONLY BLMFL FUNCTION
CREATE OR REPLACE AGGREGATE blmfl_int(input_data BIGINT) (
    SFUNC = blmfl_sfunc_int,
    STYPE = INTERNAL,
    FINALFUNC = blmfl_ffunc
);

-- This function suggests a value for `k`; it does not return the actual value of `k` used. 
CREATE OR REPLACE FUNCTION blmfl_optimal_k(m INT, n INT) RETURNS INT 
AS 'MODULE_PATHNAME'
LANGUAGE C IMMUTABLE STRICT;

CREATE OR REPLACE FUNCTION blmfl_approx_unique_count(BLMFL_RESULT) RETURNS INT 
AS 'MODULE_PATHNAME'
LANGUAGE C IMMUTABLE STRICT;

CREATE OR REPLACE FUNCTION blmfl_fpr(BLMFL_RESULT) RETURNS FLOAT
AS 'MODULE_PATHNAME'
LANGUAGE C IMMUTABLE STRICT;

CREATE OR REPLACE FUNCTION blmfl_merge(BLMFL_RESULT, BLMFL_RESULT) RETURNS BLMFL_RESULT
AS 'MODULE_PATHNAME'
LANGUAGE C IMMUTABLE STRICT;

CREATE OR REPLACE AGGREGATE blmfl_agg(BLMFL_RESULT) (
    SFUNC = BLMFL_MERGE,
    COMBINEFUNC = BLMFL_MERGE,
    STYPE = BLMFL_RESULT,
    PARALLEL = SAFE
);

